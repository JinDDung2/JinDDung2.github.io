# Project template
- name: Givemeticon
  github: f-lab-edu/givemeticon
  dates: 2023.09 ~ 2024.01
  quote: >
    기프티콘 전문 중고거래 플랫폼으로, 사용하지 않거나 만료가 임박한 기프티콘을 판매하고 저렴한 가격으로 구매할 수 있는 환경을 제공하는 서비스
  description: >
    - Java 17, Spring Boot 3.1, Mybatis, Mysql, Redis

    - GitHub Actions를 활용하여 CI/CD 파이프라인을 구축하여 코드 통합 및 배포 과정 자동화

    - OAuth 로그인을 활용한 회원 가입 프로세스 간소화
      - 적절한 예외 처리 로직 도입으로 시스템 보안 강화
      - 예외 상황에 대한 로깅, 에러 메시지 관리, 재인증 요구 등을 포함하여 사용자 경험과 보안 동시 개선

    - 회원 가입 시 이메일 인증을 비동기 처리로 전환하여 전체 응답 시간을 **5.12초에서 0.78초로 단축**
      - 초기 회원 가입에서 이메일 인증을 포함시킴으로써 응답 시간이 5.12초로 지연되는 문제를 발견
      - 이메일 인증 과정을 회원 가입 로직에서 분리하고, 비동기 처리 방식으로 전환하여 시스템의 효율성 향상

    - 메시지 큐 도입으로 시스템 응답성 및 확장성 강화
      - 핵심 기능 수행 시 알람과 같은 부가 기능 처리로 인해 시스템 응답 속도가 지연되고, 확장성에 제한이 발생
      - 메시지 큐를 활용하여 핵심 기능과 알람 서비스를 분리하고, 알람 발송을 비동기적으로 처리하도록 시스템 아키텍처를 재설계

    - 분산 환경에서 Redis를 이용한 분산 락을 구현하여 데이터베이스의 동시성 문제를 해결
      - 쿠폰 발급 시 분산 환경에서 데이터베이스의 비관적 락을 적용할 경우 데이터 일관성이 깨지는 문제를 발견
      - Redis를 활용하여 분산 락을 구현하고, AOP를 이용하여 비즈니스 로직과 락 처리를 명확히 분리
      - 예외 상황에 대한 처리와 로깅을 체계적으로 구축하여 시스템의 안정성을 향상

- name: 내친
  github: JinDDung2/sns-practice
  dates: 2023.04 ~ 2023.06
  quote: >
    Facebook, Thread, Twitter와 같은 SNS 서비스
  description: >
    - Java 11, Spring Boot 2.7, JWT, Mysql, Redis, AWS

    - 분산 환경에서 로그인 처리 안정성 확보
      - 세션 스토리지를 분리하고 In-memory DB로 Redis를 활용하여 세션 데이터 불일치 문제 해결
      - 세션이 stateful 구조로 인해 사용자 증가 시 성능 저하가 발생할 가능성을 확인하고, 이를 해결하기 위해 토큰 기반 인증으로 전환

    - 인기 게시글 응답속도 **약 32% 개선**
      - 게시글 관련 기능을 개발 및 테스트하는 과정에서 반복되는 요청에 대해 데이터베이스 연결 및 연산의 비효율성 발견
      - 데이터 처리 효율성을 극대화하기 위해 Redis를 도입하여 글로벌 캐싱 시스템을 구축

    - 새로운 캐시 관리 전략을 통해 서버의 안정성을 유지하면서 메모리 사용량을 효과적으로 제한하여 서비스의 성능 저하 없이 서버 다운 위험 감소
      - Redis 서버의 메모리 사용이 급증하면서 성능 저하 및 잠재적인 서버 다운 위험을 발견
      - **allkeys-lfu 캐시 제거 정책**을 채택하여 자주 접근되지 않는 데이터를 우선적으로 제거하여 필요한 데이터만을 효율적으로 캐싱하도록 설정

    - **Redis 인스턴스의 분리와 부하 분산**을 통해 전체 시스템의 처리 능력을 증가 및 응답 속도 향상
      - 단일 Redis 인스턴스에서 토큰 저장과 캐싱 작업이 동시에 처리되어 성능 병목 현상이 발생하는 것을 발견
      - 토큰 저장소와 캐시 저장소를 별도의 인스턴스로 분리하여 각 작업에 최적화된 설정을 적용하여 부하 분산을 통해 각 인스턴스의 처리 효율을 높임

    - 읽기 시점의 데이터베이스 부하를 크게 줄여 사용자의 대기 시간 단축
      - 타임라인 읽기 부하가 증가하여, 사용자 경험이 저하될 가능성이 높다고 판단
      - 게시물을 작성하는 시점에 각 사용자의 타임라인에 즉시 데이터를 배달하고 저장하여, 읽기 요청 시 데이터베이스의 부하를 줄임
      
    - 트위터의 Push 모델을 참고하여 SNS 서비스의 타임라인 기능을 구현함으로써 **읽기 시점의 부하를 줄이고** 사용자 경험을 향상

- name: 우아한 레시피
  github: JinDDung2/woowahan-recipe
  dates: 2023.01 ~ 2023.02
  quote: >
    이커머스와 레시피 커뮤니티를 합하여 레시피에 재료들을 바로 구매 가능한 서비스
  description: >
    - Java 11, Spring Boot 2.7, JPA QueryDsl, Mysql, Thymeleaf, Docker, AWS Ec2, AWS S3

    - WBS를 활용하여 구축된 시스템을 통해 프로젝트의 각 단계별 일정과 진행 상황을 공유하여 프로젝트 전반의 성과가 개선
      - 프로젝트의 다양한 단계에서 일정과 진행 상황의 불명확성으로 인해 팀 간의 소통이 원활하지 않고, 업무 진행에 혼란이 발생하는 문제를 발견
      - [WBS](https://docs.google.com/spreadsheets/d/1xUwk6fgmqTmHhxgPIve0l4bc1mUKWrWxojsINmFgmtc/edit#gid=0)를 활용하여 모든 프로젝트 작업을 세분화하고, 각 작업의 일정과 상태를 시각적으로 표현할 수 있는 관리 시스템을 구축

    - DB 설계 및 테이블 관계 정리로 데이터 접근 및 관리 용이성 향상
      - 데이터베이스 설계 과정에서 여러 엔터티 간 복잡한 다대다 관계가 발견. 이로 인해 데이터 중복과 관리 복잡성이 증가할 가능성 존재
      - 중간 연결 테이블을 도입하여 다대다 관계를 두 개의 일대다 관계로 전환. 이를 통해 각 테이블의 관계를 명확히 하여 데이터 접근성과 관리 효율성을 개선

    - 멀티스레드 환경에서 **재고 데이터 일관성 유지**
      - 동시에 여러 요청이 처리될 때 재고 데이터의 불일치 문제 발견
      - 재고 데이터와 상품 정보 분리 및 비관적 락을 도입하여 동시성 제어
      - 상품과 재고 데이터를 분리하여 락이 걸릴 때 상품에도 락이 걸리는 문제 해결

    - 금액 위조 시도 차단으로 결제 시스템의 신뢰성 및 안정성 향상
      - 자바스크립트를 사용하여 클라이언트 측에서 결제 가격을 조작할 수 있는 취약점 발견
      - 서버에서 재계산한 금액과 클라이언트의 결제 요청 금액을 비교하는 로직 구현

    - JPA 쿼리 최적화를 통한 응답 속도 향상
      - 주문 조회 시 각 주문에 대해 추가 쿼리가 발생하는 N+1 문제 발견
      - 지연 로딩과 fetch 전략을 적용하여 필요한 데이터를 한 번의 쿼리로 불러오도록 최적화
